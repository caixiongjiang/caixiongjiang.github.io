<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python语法 on 🌀Jarson Cai&#39;s Blog</title>
    <link>https://caixiongjiang.github.io/categories/python%E8%AF%AD%E6%B3%95/</link>
    <description>Recent content in Python语法 on 🌀Jarson Cai&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 23 Jun 2024 18:18:05 +0800</lastBuildDate><atom:link href="https://caixiongjiang.github.io/categories/python%E8%AF%AD%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python进阶用法（一）</title>
      <link>https://caixiongjiang.github.io/blog/2024/python%E8%BF%9B%E9%98%B6/python%E8%BF%9B%E9%98%B6%E7%94%A8%E6%B3%95%E4%B8%80/</link>
      <pubDate>Sun, 23 Jun 2024 18:18:05 +0800</pubDate>
      
      <guid>https://caixiongjiang.github.io/blog/2024/python%E8%BF%9B%E9%98%B6/python%E8%BF%9B%E9%98%B6%E7%94%A8%E6%B3%95%E4%B8%80/</guid>
      <description>Python进阶笔记（一） 面向对象编程 在之前的Python类编程中，只知道类似的self调用类内方法，今天来学习一下类变量、类方法、静态方法。
类变量 来看一个类的例子：
1 2 3 4 5 6 class Student: def __init__(self, name, sex): self.name = name self.sex = sex s1 = Student(&amp;#34;Caicai&amp;#34;, &amp;#34;male&amp;#34;) 可以看到name和sex属性都代表了单个实例的信息，这时，假设我需要统计学生类的人数，也就是学生类实例的个数，我们就可以使用类变量的方法。
1 2 3 4 5 6 7 8 9 10 11 class Student: student_num = 0 def __init__(self, name, sex): self.name = name self.sex = sex Student.student_num += 1 s1 = Student(&amp;#34;Caicai&amp;#34;, &amp;#34;male&amp;#34;) print(f&amp;#34;Student.student_num: {Student.student_num}&amp;#34;) # Student.student_num: 0 在类下面添加的变量就是类变量，类变量的访问需要通过类直接进入。
假设我们将上述代码改成了如下形式：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 class Student: student_num = 0 def __init__(self, name, sex): self.</description>
    </item>
    
  </channel>
</rss>
