<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>心情随想 on 🌀riba2534&#39;s Blog</title>
    <link>https://caixiongjiang.github.io/categories/%E5%BF%83%E6%83%85%E9%9A%8F%E6%83%B3/</link>
    <description>Recent content in 心情随想 on 🌀riba2534&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 08 May 2021 18:07:05 +0800</lastBuildDate><atom:link href="https://caixiongjiang.github.io/categories/%E5%BF%83%E6%83%85%E9%9A%8F%E6%83%B3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>博客迁移至hugo</title>
      <link>https://caixiongjiang.github.io/blog/2021/%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E8%87%B3hugo/</link>
      <pubDate>Sat, 08 May 2021 18:07:05 +0800</pubDate>
      
      <guid>https://caixiongjiang.github.io/blog/2021/%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E8%87%B3hugo/</guid>
      <description>背景 两年前把个人博客从 WordPress 迁移到 Typecho ，当时的想法是觉得 WordPress 功能太复杂，维护太麻烦，所以就迁移到了相对小型的博客 Typecho，同样也是 PHP 开发的。当时采用了一个很漂亮的 HandSome 主题，但是后面我越来越发现博客的关键在于内容与质量，好不好看应该是其次的，我有点本末倒置了。
所以我打算换一种博客展示形式了
为什么不再是 Typecho? 说一说采用 Typecho 的缺点：
 由于工作后个人精力的原因，空闲时间并不多，没有很多时间维护服务器，所以需要一种更简单的博客维护方式。 目前的 Typecho 博客还放在腾讯云的一台服务器上，这个服务器再过一年多就过期了，而我又不经常更新与维护，导致了目前服务器版本还停留在 Ubuntu16.04，可能会存在很多历史问题，我懒得修 LAMP 这种动态博客的方式有点陈旧，我还会经常忘记 MySQL 的密码，长此以往，等到服务器快过期的时候一定是一个灾难。 我现在觉得博客应该专注于内容，不想搞那么些花里胡哨的东西，需要寻找一种新的博客展示方式。 现在静态博客比较流行，也比较流行 Serverless 的概念，我想试试  我的需求 我目前对博客的需求是：
 简洁：我希望功能与页面都简洁，能突出博客的内容即可，但是也不能太丑。 支持完整的 MarkDown 语法与数学公式支持 容易维护：我不想花费太多时间在服务器的维护上，也不想整天被黑客盯上，冲着我的网站扫个不停。 费用低一点：目前使用的云服务器是腾讯云的学生机，在毕业前我考虑到了毕业后没有学生优惠这件事，一下子买了好几年，但是总会过期的，过期后的 1C1G 的机器，一月好像顶我现在一年的费用，为了维护一个博客，不值得这样。 数据存储不希望使用数据库：放在云服务器上的 MySQL，比较危险，万一哪天服务器被黑了，直接给我删库我咋办，可以做一个定时备份，但是这样比较麻烦，使用 Markdown 这种文件存储的方式更好一些。 希望通过 Git 进行版本控制：写的多了，就知道版本控制的重要性了。 内容可以长时间存在，防止年久失修丢数据，目前来看，GitHub 可以满足这一点。  为什么是 Hugo? 经过我的一番调研，最终落在了 Hexo 和 Hugo 这两个静态页面生成器身上，由于我目前从事 Golang 开发，对 Go 语言比较熟悉，最后就选择 Hugo 了。(听说文章多了 Hexo 渲染的会很慢？)</description>
    </item>
    
    <item>
      <title>到目前为止的春招总结</title>
      <link>https://caixiongjiang.github.io/blog/2019/%E5%88%B0%E7%9B%AE%E5%89%8D%E4%B8%BA%E6%AD%A2%E7%9A%84%E6%98%A5%E6%8B%9B%E6%80%BB%E7%BB%93/</link>
      <pubDate>Fri, 22 Mar 2019 22:23:00 +0800</pubDate>
      
      <guid>https://caixiongjiang.github.io/blog/2019/%E5%88%B0%E7%9B%AE%E5%89%8D%E4%B8%BA%E6%AD%A2%E7%9A%84%E6%98%A5%E6%8B%9B%E6%80%BB%E7%BB%93/</guid>
      <description>到目前为止的春招总结 大概是去年 11 月的时候，ACM 退役后开始决定找工作，方向是 c++，在牛客上搜了很多面经。发现找工作要学的东西太多了，所以就比较着急一度以为自己要凉了。然后就开始复习操作系统、计算机网络。网络编程相关东西。寒假刷了一本《剑指offer》和 LeetCode 感觉对找工作比较有用。
本来没想到这么快的，大概是过年后牛客开始有了20届名企直推专场，听到了金三银四的说法，然后就把能投的公司都投了，这时候在牛客讨论区找到了一个头条内推，然后第二天 hr 就要打电话要面试，我慌了，然后商量了一下把面试时间调到了一个月后。刚开始收到了吉比特的电话，然后把面试时间定到了开学后。然后即开始面试了，没想到吉比特只有一面技术面，然后就 hr 面，然后就收到了offer。然后依图给我打电话要一面，全程在写题，面试官也比较友好。然后过了一周二面三面，当天就发了 offer 。还有就是头条了，头条也是算法题居多。还有一些基础知识，感觉自己比较幸运，头条一面我回答的特别惨，然后面试官竟然让我二面，二面三面答得还比较行，手撕代码也出来了。
最后收获了三个offer，字节跳动，依图，吉比特。
顺便推广一波我的博客：https://blog.csdn.net/riba2534
部分面经在底下：
 吉比特游戏开发实习生一面面经 腾讯后台开发实习一面面经 头条实习后台开发一面二面面经 依图一面二面三面面经  最后，感谢牛客，如果没有牛客这个平台，可能真的不知道如何找工作。。
 顺便问下，哪里有头条的已经拿道暑期offer的群，可以拉我一下～</description>
    </item>
    
    <item>
      <title>依图一面二面三面面经</title>
      <link>https://caixiongjiang.github.io/blog/2019/%E4%BE%9D%E5%9B%BE%E4%B8%80%E9%9D%A2%E4%BA%8C%E9%9D%A2%E4%B8%89%E9%9D%A2%E9%9D%A2%E7%BB%8F/</link>
      <pubDate>Tue, 19 Mar 2019 22:47:19 +0800</pubDate>
      
      <guid>https://caixiongjiang.github.io/blog/2019/%E4%BE%9D%E5%9B%BE%E4%B8%80%E9%9D%A2%E4%BA%8C%E9%9D%A2%E4%B8%89%E9%9D%A2%E9%9D%A2%E7%BB%8F/</guid>
      <description>2019年03月19日 晚上突然收到 hr 电话要发offer，本来以为都凉了
感觉依图大部分都是算法题，一二面都写出来了，三面来了一个看起来很厉害的大佬，有自己的办公室，用后面的白板给我出了道物理题还是数学题让我做。
隔了两周了，问题忘得差不多了，把能记住的写下来。
一面  自我介绍 打一段自己熟悉的算法代码，并讲解 堆和栈的区别 手撕代码，两个有序数组中找第k大 手撕代码，一个矩阵填数的模拟题 剩下的好像问了一些网络和操作系统相关的，忘了，毕竟一周前了  二面  说一下什么是 I/O 复用 说一下select 和 epoll 写题，一个dfs,大意是有一个 n*m 的图，上下左右的值相差 1 可以连成一个块，让你输出一个新图，把每个块用0 1 2 3&amp;hellip;标记。 一个 1-n 的数组丢了 1 个数，找出来 一个 1-n 的数组丢了 2 个数，找出来 一个 1-n 的数组丢了 3 个数，找出来 还手撕了两个编程题，忘了是啥了 然后就谈人生，谈一下打比赛的经历  三面 看起来是个大佬，有自己独立办公室
 分析一下最小生成树复杂度。不是两个算法的复杂度，是最小生成树这个问题本身的复杂度 分析一下排序这个问题本身的复杂度（不是算法复杂度）  这俩题我都蒙了，不让我扯算法，让我说这个问题本身，我最后扯了扯决策树，然后大概就完了
还出了一道数学题
 光滑的长为 L 的轨道上，有 n 个无摩擦的小球，每个小球的速度的值一样，但是方向不一样（方向只有左右两个方向），给出每个小球的位置，以及每个小球的方向，问你最后一个小球离开轨道的时间是多少？  然后大概扯了扯其他的方面，聊一聊人生。</description>
    </item>
    
    <item>
      <title>头条实习后台开发一面二面面经</title>
      <link>https://caixiongjiang.github.io/blog/2019/%E5%A4%B4%E6%9D%A1%E5%AE%9E%E4%B9%A0%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91%E4%B8%80%E9%9D%A2%E4%BA%8C%E9%9D%A2%E9%9D%A2%E7%BB%8F/</link>
      <pubDate>Fri, 15 Mar 2019 09:28:06 +0800</pubDate>
      
      <guid>https://caixiongjiang.github.io/blog/2019/%E5%A4%B4%E6%9D%A1%E5%AE%9E%E4%B9%A0%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91%E4%B8%80%E9%9D%A2%E4%BA%8C%E9%9D%A2%E9%9D%A2%E7%BB%8F/</guid>
      <description>头条实习后台开发一面二面面经 2019年03月14日14:00 进行了头条后台开发的一二面，本来要三面的，面试官由于临时有事，联系 HR 改到了下周了。
下面的题目不分一面二面。基本流程就是先自我介绍，问你会啥，然后先问一些问题，然后写算法题。
网络和OS   TCP 的三次握手，为什么是三次，而不是两次
  超时重传，由谁来重传
  如果一直没有收到，服务端会怎么样
  select 和 epoll 的区别及分析
  进程 IPC 的方式有哪些，说一下你最熟悉的一个
  说一下锁机制
  当你在 Linux 的 bash 中按下 Ctrl+C 时，操作系统会做出什么反应，给操作系统发出的那个信号怎么拼写
  是硬中断和软中断（接上一题）
  进程和线程的区别
  数据结构和算法  全排列 给你一个化学式，比如：Mg2(H2O)2 其中各个元素的原子有几个，一个元素定义为一个大写字母或者一个大写字母跟着一个小写字母，比如给出的例子里面 Mg 有 2 个，H 有 4 个，O 有 2 个 给你一个数字 n 和 m，让你求出从 1 到 m 这些数字中字典序排列第 n 小的数字，然后我问 m 多大，他说 int64 范围内，然后我的脑子里就排除了排序和字典树的作法，然后去找规律。。。过了一会面试官问我啥思路，我说先排除排序和字典树的作法，应该找规律。然后他说为什么排除，我说了一下数据范围太大。然后面试官让我用字典树和排序的作法做 你都学过哪些高级数据结构  其他  你对 Python 了解多少 你了解 Http 吗 会 MySQL 吗 你平时怎么学习的 除了打比赛，还学了其他的吗 你想在实习中学到什么  </description>
    </item>
    
    <item>
      <title>腾讯后台开发实习一面面经</title>
      <link>https://caixiongjiang.github.io/blog/2019/%E8%85%BE%E8%AE%AF%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E4%B8%80%E9%9D%A2%E9%9D%A2%E7%BB%8F/</link>
      <pubDate>Wed, 13 Mar 2019 11:17:00 +0800</pubDate>
      
      <guid>https://caixiongjiang.github.io/blog/2019/%E8%85%BE%E8%AE%AF%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E4%B8%80%E9%9D%A2%E9%9D%A2%E7%BB%8F/</guid>
      <description>2019年03月12日下午四点收到腾讯面试官电话。
首先做了自我介绍，然后面试官往我邮箱发了一个题，让我在线编程。
然后过了大概十几分钟，我给出了一个 O(n) 的作法。
算法聊完后，面试官问了问关于网络和 C++ 的一些东西，然后我回答的很惨，下面是问题。
C++  创建一个 vector&amp;lt;int&amp;gt; ，里面存了5个元素 1 2 3 4 5，把迭代器指向 5，然后在 vector 的最前面插入一个 0 ，问刚才那个迭代器指向几  网络编程和OS  在 socket 编程中，服务端调用了 bind listen 但是没有调用 accept ，而是调用了 sleep(1000) ，然后客户端 调用 connect 向已经 sleep 的服务端发起请求，问这个 connect 会不会返回。我回答会醒过来，面试官继续问，如果醒过来后，服务端没有写 accept ，那么 connect 会不会返回。 connect 在 TCP 握手的哪个阶段会返回，是三次握手完成后还是在中间某个阶段返回 select 和 epoll 的异同点，epoll 为啥快。 面试官提出一个场景，创建一个 socket 并且加入到 epoll 中，现在把这个 socket 给 close 掉，那么这个被 close 的 socket 还在不在 epoll 中（没有主动调用 epoll_ctl 去删除），如果这时用 epoll_ctl 去删除它，还能不能删除掉。 有没有看过 epoll 的 man 手册 什么时候接触 Linux 的。 你如何了解一个新知识，如何学习  算法和数据结构  做题，略过 说一下贪心和动态规划的区别。 说一下红黑树，为什么在 STL 的实现中，用的是红黑树，而不是其他树。 B 树，跳表学过吗  其他  如果让你设计中国第三代身份证系统，说一下设计思路。 除了学习算法打比赛，你还学了些啥  </description>
    </item>
    
    <item>
      <title>2019年2月27日吉比特一面面经</title>
      <link>https://caixiongjiang.github.io/blog/2019/2019%E5%B9%B42%E6%9C%8827%E6%97%A5%E5%90%89%E6%AF%94%E7%89%B9%E4%B8%80%E9%9D%A2%E9%9D%A2%E7%BB%8F/</link>
      <pubDate>Sat, 02 Mar 2019 16:49:25 +0800</pubDate>
      
      <guid>https://caixiongjiang.github.io/blog/2019/2019%E5%B9%B42%E6%9C%8827%E6%97%A5%E5%90%89%E6%AF%94%E7%89%B9%E4%B8%80%E9%9D%A2%E9%9D%A2%E7%BB%8F/</guid>
      <description>吉比特面经 投的 游戏开发实习生
C++   static 和 const
  内存泄漏以及如何解决
  智能指针,unique_ptr 怎么实现的
  多态怎么体现（说了虚函数，提示还有函数重载）
  模板的特化和偏特化
  深拷贝和浅拷贝，从内存的角度
  C++11
  lamda 表达式
  操作系统  进程通信方法 死锁如何引起 网路编程理解到什么程度了 select 和 epoll 区别 水平触发和边缘触发   数据结构和算法  常用的排序及其复杂度 说一下归并排序 说一下堆建立过程及其复杂度 哈希函数冲突处理 红黑树比二叉查找树的优点 判断图的联通 最小生成树 介绍一下动态规划 文件去除重复行  闲话   看过什么书
  了解计算机哪些知识
  打比赛之外还干什么
  用过 lua 吗</description>
    </item>
    
    <item>
      <title>ACM退役感言</title>
      <link>https://caixiongjiang.github.io/blog/2018/acm%E9%80%80%E5%BD%B9%E6%84%9F%E8%A8%80/</link>
      <pubDate>Thu, 13 Dec 2018 22:49:00 +0800</pubDate>
      
      <guid>https://caixiongjiang.github.io/blog/2018/acm%E9%80%80%E5%BD%B9%E6%84%9F%E8%A8%80/</guid>
      <description>ACM退役感言 很早之前就想写这篇博客了，由于很多原因，一直拖到了现在。由于弱校的原因，我们在大三上学期打完ACM亚洲区域赛和CCPC就退役了，因为这时候面临着找工作和考研的问题，我们没有时间再搞一年ACM,回顾一下我这两年来的历程.
大一 2016年9月，是大一开学的日子</description>
    </item>
    
    <item>
      <title>新博客迁移通知</title>
      <link>https://caixiongjiang.github.io/blog/2018/%E6%96%B0%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E9%80%9A%E7%9F%A5/</link>
      <pubDate>Thu, 13 Dec 2018 13:55:00 +0800</pubDate>
      
      <guid>https://caixiongjiang.github.io/blog/2018/%E6%96%B0%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E9%80%9A%E7%9F%A5/</guid>
      <description>新博客迁移通知 由于CSDN变得越来越流氓，虽然可以用广告屏蔽插件屏蔽广告，但是并不是所有的浏览者都可以屏蔽广告，再加上原本的www.riba2534.cn是基于wordpress显得太臃肿，不适合轻量级的博客，遂迁移到typecho.
会使用这个地址来更新博客,地址: http://blog.riba2534.cn/&amp;lt;/</description>
    </item>
    
  </channel>
</rss>
