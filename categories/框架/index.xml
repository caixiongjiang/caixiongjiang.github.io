<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>框架 on 🌀riba2534&#39;s Blog</title>
    <link>https://caixiongjiang.github.io/categories/%E6%A1%86%E6%9E%B6/</link>
    <description>Recent content in 框架 on 🌀riba2534&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 17 Jul 2019 10:32:01 +0800</lastBuildDate><atom:link href="https://caixiongjiang.github.io/categories/%E6%A1%86%E6%9E%B6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gin官方文档</title>
      <link>https://caixiongjiang.github.io/blog/2019/gin%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/</link>
      <pubDate>Wed, 17 Jul 2019 10:32:01 +0800</pubDate>
      
      <guid>https://caixiongjiang.github.io/blog/2019/gin%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/</guid>
      <description>安装与配置 安装：
1  $ go get gopkg.in/gin-gonic/gin.v1   注意：确保 GOPATH GOROOT 已经配置
导入：
1  import &amp;#34;gopkg.in/gin-gonic/gin.v1&amp;#34;   框架架构  HTTP 服务器  1.默认服务器
1  router.Run()   2.HTTP 服务器
除了默认服务器中 router.Run() 的方式外，还可以用 http.ListenAndServe()，比如
1 2 3 4  func main() { router := gin.Default() http.ListenAndServe(&amp;#34;:8080&amp;#34;, router) }   或者自定义 HTTP 服务器的配置：
1 2 3 4 5 6 7 8 9 10 11 12  func main() { router := gin.</description>
    </item>
    
  </channel>
</rss>
