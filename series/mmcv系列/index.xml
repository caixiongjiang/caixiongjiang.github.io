<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>《MMCV系列》 on 🌀Jarson Cai&#39;s Blog</title>
    <link>https://caixiongjiang.github.io/series/mmcv%E7%B3%BB%E5%88%97/</link>
    <description>Recent content in 《MMCV系列》 on 🌀Jarson Cai&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 16 Aug 2023 18:18:05 +0800</lastBuildDate><atom:link href="https://caixiongjiang.github.io/series/mmcv%E7%B3%BB%E5%88%97/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MMSegmentation初探</title>
      <link>https://caixiongjiang.github.io/blog/2023/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/mmsegmentation%E5%88%9D%E6%8E%A2/</link>
      <pubDate>Wed, 16 Aug 2023 18:18:05 +0800</pubDate>
      
      <guid>https://caixiongjiang.github.io/blog/2023/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/mmsegmentation%E5%88%9D%E6%8E%A2/</guid>
      <description>MMSegmentation环境配置 安装Pytorch 这部分比较常规，就不细讲了，一般来说就是安装虚拟环境再安装pytorch的cuda训练包，这里要求的环境是Pytorch 1.10.0 + CUDA 11.3。
使用MIM安装MMCV mmcv是MMsegmentation的基础，也是商汤框架所有算法库的母框架，这里我们使用MIM来安装MMCV：
1 2 3 $ pip install -U openmim $ mim install mmengine $ mim install &amp;#39;mmcv==2.0.0&amp;#39; 安装其他工具包 这些工具包都是图像处理常用的包，可以自行选择。
1 pip install opencv-python pillow matplotlib seaborn tqdm &amp;#39;MMdet&amp;gt;=3.1.0&amp;#39; -i https://pypi.tuna.tsinghua.edu.cn/simple 这里需要下载MMdet是因为后面可能部分语义分割算法依赖于MMdet
安装MMSegmentation 这里推荐使用源码安装的方式，这样也可以参考部分源码获取信息：
下载源码： 1 git clone https://github.com/open-mmlab/mmsegmentation.git -b v1.1.1 -b代表该仓库的分支下载！
进入主目录： 1 cd mmsegmentation 源码安装： 1 pip install -v -e 检查安装是否成功 检查Pytorch: 1 2 3 4 import torch, torchvision print(&amp;#34;Pytorch 版本&amp;#34;, torch.</description>
    </item>
    
    <item>
      <title>MMSegmentation使用</title>
      <link>https://caixiongjiang.github.io/blog/2023/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/mmsegmentation%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 16 Aug 2023 18:18:05 +0800</pubDate>
      
      <guid>https://caixiongjiang.github.io/blog/2023/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/mmsegmentation%E4%BD%BF%E7%94%A8/</guid>
      <description>MMSegmentation教程 分割模型预测 语义分割模型预测-命令行模式（CLI） 进入mmsegmentaion的目录： 1 cd mmsegmentation 准备素材（模型配置文件，模型权重文件，素材图片） 1 2 3 4 $ mkdir config $ mkdir checkpoints $ mkdir test_imgs $ mkdir test_results 进行预测 1 2 3 4 5 6 7 8 # 以PSPNet为例 python demo/image_demo.py \ data/street_uk.jpeg \ configs/pspnet/pspnet_r50-d8_4xb2-40k_cityscapes-512x1024.py \ https://download.openmmlab.com/mmsegmentation/v0.5/pspnet/pspnet_r50-d8_512x1024_40k_cityscapes/pspnet_r50-d8_512x1024_40k_cityscapes_20200605_003338-2966598c.pth \ --out-file outputs/B1_uk_pspnet.jpg \ --device cuda:0 \ --opacity 0.5 语义分割模型预测-Python API 对于批量图片的预测，或者需要对图像进行后处理，我推荐使用Python API的方式。
进入mmsegmentation目录： 1 cd mmsegmentation 编写脚本： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 import torch import numpy as np import matplotlib.</description>
    </item>
    
  </channel>
</rss>
