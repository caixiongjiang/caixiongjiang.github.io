<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c&#43;&#43; on 🌀Jarson Cai&#39;s Blog</title>
    <link>https://caixiongjiang.github.io/tags/c&#43;&#43;/</link>
    <description>Recent content in c&#43;&#43; on 🌀Jarson Cai&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 01 Mar 2022 18:07:05 +0800</lastBuildDate><atom:link href="https://caixiongjiang.github.io/tags/c++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>《Effective C&#43;&#43;》导读&amp;条款1~3</title>
      <link>https://caixiongjiang.github.io/blog/2022/effective-c&#43;&#43;%E5%AF%BC%E8%AF%BB%E6%9D%A1%E6%AC%BE1~3/</link>
      <pubDate>Tue, 01 Mar 2022 18:07:05 +0800</pubDate>
      
      <guid>https://caixiongjiang.github.io/blog/2022/effective-c&#43;&#43;%E5%AF%BC%E8%AF%BB%E6%9D%A1%E6%AC%BE1~3/</guid>
      <description>《Effective c++》学习笔记 导读部分 正式开始55条条款之前，这本书的目的是为了让c++程序员如何写出更加安全高效的程序准备的，属于进阶书籍，如果观看本书还有很多不明白的地方，还需要去学基础，推荐《c++ Primer》,看本书前需要知道的有：c++面向过程，c++面向对象，c++泛型编程，c++ STL标准库， c++多线程编程。
术语   1.std命名空间是几乎所有c++标准程序库元素的栖息地，所以在导入c++头文件的时候，一定要在std命名空间内写程序
  2.size_t是一个typedef，是c++计算个数（字符串内的个数或者STL容器内的元素个数）时使用的，它属于无符号整数
  3.一个类的构造函数使用explicit关键字可以阻止它们被用来隐式类型转换，但他们仍然可被用于显示类型转化。被声明为explicit关键字的构造函数通常比没有它更受欢迎，因为它们禁止编译器执行非预期的类型
demo：
  头文件（.h）:
1 2 3 4 5 6 7 8 9 10 11 12 13 14  class A{ public: A(); //default构造函数 }; class B{ public: explicit B(int x = 0, bool b = true);//default构造函数 两个参数都已经设置默认值 }; class C{ public: explicit C(int x);//不是default构造函数 };     执行文件（.cpp）:
1 2 3 4 5 6 7 8 9 10  void doSomething(B bObject); //函数声明，接收一个类型为B的对象  B bObj1; doSomething(bObj1); B bObj2(28);//正确，根据int28建立一个B  doSomething(28);//错误！doSomething应该接收一个B 	//int至B之间没有隐式类型转化  doSomething(B(28));//正确，使用B构造函数将int显示转换       4.</description>
    </item>
    
  </channel>
</rss>
