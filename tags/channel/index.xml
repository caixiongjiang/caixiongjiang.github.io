<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>channel on 🌀riba2534&#39;s Blog</title>
    <link>https://caixiongjiang.github.io/tags/channel/</link>
    <description>Recent content in channel on 🌀riba2534&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 01 Sep 2020 11:13:34 +0800</lastBuildDate><atom:link href="https://caixiongjiang.github.io/tags/channel/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go Channel 详解</title>
      <link>https://caixiongjiang.github.io/blog/2020/go-channel-%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Tue, 01 Sep 2020 11:13:34 +0800</pubDate>
      
      <guid>https://caixiongjiang.github.io/blog/2020/go-channel-%E8%AF%A6%E8%A7%A3/</guid>
      <description>Go Channel 详解 Channel是Go中的一个核心类型，你可以把它看成一个管道，通过它并发核心单元就可以发送或者接收数据进行通讯(communication)。
它的操作符是箭头 &amp;lt;- 。
1 2  ch &amp;lt;- v // 发送值v到Channel ch中 v := &amp;lt;-ch // 从Channel ch中接收数据，并将数据赋值给v   (箭头的指向就是数据的流向)
就像 map 和 slice 数据类型一样, channel必须先创建再使用:
1  ch := make(chan int)   Channel类型 Channel类型的定义格式如下：
1  ChannelType = ( &amp;#34;chan&amp;#34; | &amp;#34;chan&amp;#34; &amp;#34;&amp;lt;-&amp;#34; | &amp;#34;&amp;lt;-&amp;#34; &amp;#34;chan&amp;#34; ) ElementType .   它包括三种类型的定义。可选的&amp;lt;-代表channel的方向。如果没有指定方向，那么Channel就是双向的，既可以接收数据，也可以发送数据。
1 2 3  chan T // 可以接收和发送类型为 T 的数据 chan&amp;lt;- float64 // 只可以用来发送 float64 类型的数据 &amp;lt;-chan int // 只可以用来接收 int 类型的数据   &amp;lt;-总是优先和最左边的类型结合。(The &amp;lt;- operator associates with the leftmost chan possible)</description>
    </item>
    
  </channel>
</rss>
