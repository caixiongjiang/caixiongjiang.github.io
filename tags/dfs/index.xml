<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dfs on 🌀riba2534&#39;s Blog</title>
    <link>https://blog.riba2534.cn/tags/dfs/</link>
    <description>Recent content in dfs on 🌀riba2534&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 15 Sep 2020 00:53:33 +0800</lastBuildDate><atom:link href="https://blog.riba2534.cn/tags/dfs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode 37 解数独（dfs）</title>
      <link>https://blog.riba2534.cn/blog/2020/leetcode-37-%E8%A7%A3%E6%95%B0%E7%8B%ACdfs/</link>
      <pubDate>Tue, 15 Sep 2020 00:53:33 +0800</pubDate>
      
      <guid>https://blog.riba2534.cn/blog/2020/leetcode-37-%E8%A7%A3%E6%95%B0%E7%8B%ACdfs/</guid>
      <description>题目链接：解数独
编写一个程序，通过已填充的空格来解决数独问题。
一个数独的解法需遵循如下规则：
 数字 1-9 在每一行只能出现一次。 数字 1-9 在每一列只能出现一次。 数字 1-9 在每一个以粗实线分隔的 3x3 宫内只能出现一次。  空白格用 &#39;.&#39; 表示。
一个数独。
答案被标成红色。
Note:
 给定的数独序列只包含数字 1-9 和字符 &#39;.&#39; 。 你可以假设给定的数独只有唯一解。 给定数独永远是 9x9 形式的。  思路 经典的解数独游戏。
首先记录下来所有的需要填数字的坐标信息，然后从第一个需要填数的地方开始填数，依次判断数字 1-9 ，当前位置是否可以填数，可以的话填数，继续搜索下一层，最后回溯的时候需要取消填数继续试。如果找到答案，就记录一下，这里可以剪枝。
要判断一个地方能不能填数字，要满足：
 这一行中有没有相同数字 这一列中有没有相同数字 当前的小9宫格中，有没有相同数字（对当前坐标*3和/3的操作是为了确定当前小九宫格的起始点坐标）  如果满足这个条件，证明这个地方可以填数。
具体看代码
代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51  class Solution { public: vector&amp;lt;pair&amp;lt;int, int&amp;gt;&amp;gt; point; vector&amp;lt;vector&amp;lt;char&amp;gt;&amp;gt; ans; bool flag; bool check(vector&amp;lt;vector&amp;lt;char&amp;gt;&amp;gt; &amp;amp;board, int k, int step) { for (int i = 0; i &amp;lt; 9; i++) if (board[point[step].</description>
    </item>
    
    <item>
      <title>LeetCode 529 扫雷游戏（DFS）</title>
      <link>https://blog.riba2534.cn/blog/2020/leetcode-529-%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8Fdfs/</link>
      <pubDate>Thu, 20 Aug 2020 01:59:22 +0800</pubDate>
      
      <guid>https://blog.riba2534.cn/blog/2020/leetcode-529-%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8Fdfs/</guid>
      <description>题目链接：扫雷游戏
让我们一起来玩扫雷游戏！
给定一个代表游戏板的二维字符矩阵。 &amp;lsquo;M&amp;rsquo; 代表一个未挖出的地雷，&amp;lsquo;E&amp;rsquo; 代表一个未挖出的空方块，&amp;lsquo;B&amp;rsquo; 代表没有相邻（上，下，左，右，和所有4个对角线）地雷的已挖出的空白方块，数字（&amp;lsquo;1&amp;rsquo; 到 &amp;lsquo;8&amp;rsquo;）表示有多少地雷与这块已挖出的方块相邻，&amp;lsquo;X&amp;rsquo; 则表示一个已挖出的地雷。
现在给出在所有未挖出的方块中（&amp;lsquo;M&amp;rsquo;或者&amp;rsquo;E&amp;rsquo;）的下一个点击位置（行和列索引），根据以下规则，返回相应位置被点击后对应的面板：
 如果一个地雷（&amp;lsquo;M&amp;rsquo;）被挖出，游戏就结束了- 把它改为 &amp;lsquo;X&amp;rsquo;。 如果一个没有相邻地雷的空方块（&amp;lsquo;E&amp;rsquo;）被挖出，修改它为（&amp;lsquo;B&amp;rsquo;），并且所有和其相邻的未挖出方块都应该被递归地揭露。 如果一个至少与一个地雷相邻的空方块（&amp;lsquo;E&amp;rsquo;）被挖出，修改它为数字（&amp;lsquo;1&amp;rsquo;到&#39;8&amp;rsquo;），表示相邻地雷的数量。 如果在此次点击中，若无更多方块可被揭露，则返回面板。  示例 1：
输入: [[&#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;],[&#39;E&#39;, &#39;E&#39;, &#39;M&#39;, &#39;E&#39;, &#39;E&#39;],[&#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;],[&#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;]]Click : [3,0]输出: [[&#39;B&#39;, &#39;1&#39;, &#39;E&#39;, &#39;1&#39;, &#39;B&#39;],[&#39;B&#39;, &#39;1&#39;, &#39;M&#39;, &#39;1&#39;, &#39;B&#39;],[&#39;B&#39;, &#39;1&#39;, &#39;1&#39;, &#39;1&#39;, &#39;B&#39;],[&#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;]]解释:示例 2：
输入: [[&#39;B&#39;, &#39;1&#39;, &#39;E&#39;, &#39;1&#39;, &#39;B&#39;],[&#39;B&#39;, &#39;1&#39;, &#39;M&#39;, &#39;1&#39;, &#39;B&#39;],[&#39;B&#39;, &#39;1&#39;, &#39;1&#39;, &#39;1&#39;, &#39;B&#39;],[&#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;]]Click : [1,2]输出: [[&#39;B&#39;, &#39;1&#39;, &#39;E&#39;, &#39;1&#39;, &#39;B&#39;],[&#39;B&#39;, &#39;1&#39;, &#39;X&#39;, &#39;1&#39;, &#39;B&#39;],[&#39;B&#39;, &#39;1&#39;, &#39;1&#39;, &#39;1&#39;, &#39;B&#39;],[&#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;]]解释:注意：</description>
    </item>
    
  </channel>
</rss>
