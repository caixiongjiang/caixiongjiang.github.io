<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Makefile on 🌀riba2534&#39;s Blog</title>
    <link>https://caixiongjiang.github.io/tags/makefile/</link>
    <description>Recent content in Makefile on 🌀riba2534&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 22 Dec 2018 17:02:00 +0800</lastBuildDate><atom:link href="https://caixiongjiang.github.io/tags/makefile/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Makefile的简单教程</title>
      <link>https://caixiongjiang.github.io/blog/2018/makefile%E7%9A%84%E7%AE%80%E5%8D%95%E6%95%99%E7%A8%8B/</link>
      <pubDate>Sat, 22 Dec 2018 17:02:00 +0800</pubDate>
      
      <guid>https://caixiongjiang.github.io/blog/2018/makefile%E7%9A%84%E7%AE%80%E5%8D%95%E6%95%99%E7%A8%8B/</guid>
      <description>Makefile的简单教程 概述  什么是makefile？或许很多Winodws的程序员都不知道这个东西，因为那些Windows的集成开发环境 （integrated development environment，IDE）都为你做了这个工作，但我觉得要作一个好的和专 业的程序员，makefile还是要懂。这就好像现在有这么多的HTML编辑器，但如果你想成为一个专业人士， 你还是要了解HTML的标签的含义。特别在Unix下的软件编译，你就不能不自己写makefile了，会不会 写makefile，从一个侧面说明了一个人是否具备完成大型工程的能力。
 说起makefile，很多人可能不知道是干什么的，当一个工程可能包含很多个文件的时候，编译起来可能会很复杂，这个时候我们可以写一个makefile编译脚本来定义一下编译的规则，然后只需要执行make命令，就会自动的执行编译脚本里面定义好的编译规则来编译项目，来得到希望得到的可执行文件。
在这里我简述一下几种简单的makefile文件的写法，已经可以解决很大一部分问题了。
提起makefile就必须得说一下make，make是一个工具，它可以解释makefile这个脚本，然后根据规则来编译一个项目。makefile定义规则，make来编译它。
关于makefile的更多知识，可以参考一下跟我一起写Makefile
语法规范 大概就长这个样子：
1 2 3 4  target ... : prerequisites ... command ... ...    target：你要生成的可执行文件 prerequisites：你要生成的可执行文件的依赖 command：通过什么命令来生成它  示例 概念说得再多，不如几个例子来的亲切。
以下包含几个例子以及如何写makefile文件来进行编译。
例子一： 现在我们随便写一个代码，用来找出一个数组中的最大值。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  // main.cpp #include &amp;lt;bits/stdc++.h&amp;gt;using namespace std; int find_max(int arr[], int n) { int maxx = 0; for (int i = 0; i &amp;lt; n; i++) maxx = max(maxx, arr[i]); return maxx; } int main() { int arr[5] = {1, 8, 6, 3, 4}; printf(&amp;#34;max is %d.</description>
    </item>
    
  </channel>
</rss>
