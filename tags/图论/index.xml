<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>图论 on 🌀riba2534&#39;s Blog</title>
    <link>https://caixiongjiang.github.io/tags/%E5%9B%BE%E8%AE%BA/</link>
    <description>Recent content in 图论 on 🌀riba2534&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 17 May 2020 00:57:15 +0800</lastBuildDate><atom:link href="https://caixiongjiang.github.io/tags/%E5%9B%BE%E8%AE%BA/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode 210 课程表 II（拓扑排序）</title>
      <link>https://caixiongjiang.github.io/blog/2020/leetcode-210-%E8%AF%BE%E7%A8%8B%E8%A1%A8-ii%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Sun, 17 May 2020 00:57:15 +0800</pubDate>
      
      <guid>https://caixiongjiang.github.io/blog/2020/leetcode-210-%E8%AF%BE%E7%A8%8B%E8%A1%A8-ii%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/</guid>
      <description>题目链接：课程表 II
现在你总共有 n 门课需要选，记为 0 到 n-1。
在选修某些课程之前需要一些先修课程。 例如，想要学习课程 0 ，你需要先完成课程 1 ，我们用一个匹配来表示他们: [0,1]
给定课程总量以及它们的先决条件，返回你为了学完所有课程所安排的学习顺序。
可能会有多个正确的顺序，你只要返回一种就可以了。如果不可能完成所有课程，返回一个空数组。
示例 1:
输入: 2, [[1,0]] 输出: [0,1]解释: 总共有 2 门课程。要学习课程 1，你需要先完成课程 0。因此，正确的课程顺序为 [0,1] 。示例 2:
输入: 4, [[1,0],[2,0],[3,1],[3,2]]输出: [0,1,2,3] or [0,2,1,3]解释: 总共有 4 门课程。要学习课程 3，你应该先完成课程 1 和课程 2。并且课程 1 和课程 2 都应该排在课程 0 之后。因此，一个正确的课程顺序是 [0,1,2,3] 。另一个正确的排序是 [0,2,1,3] 。说明:
 输入的先决条件是由边缘列表表示的图形，而不是邻接矩阵。详情请参见图的表示法。 你可以假定输入的先决条件中没有重复的边。  提示:
 这个问题相当于查找一个循环是否存在于有向图中。如果存在循环，则不存在拓扑排序，因此不可能选取所有课程进行学习。 通过 DFS 进行拓扑排序 - 一个关于Coursera的精彩视频教程（21分钟），介绍拓扑排序的基本概念。 拓扑排序也可以通过 BFS 完成。  思路 这题算是一个拓扑排序的裸题。如果存在环，就输出空，不存在环就输出正确的顺序。</description>
    </item>
    
  </channel>
</rss>
