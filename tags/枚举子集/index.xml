<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>枚举子集 on 🌀riba2534&#39;s Blog</title>
    <link>https://caixiongjiang.github.io/tags/%E6%9E%9A%E4%B8%BE%E5%AD%90%E9%9B%86/</link>
    <description>Recent content in 枚举子集 on 🌀riba2534&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 25 Aug 2020 01:22:00 +0800</lastBuildDate><atom:link href="https://caixiongjiang.github.io/tags/%E6%9E%9A%E4%B8%BE%E5%AD%90%E9%9B%86/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode 491 递增子序列(枚举子集)</title>
      <link>https://caixiongjiang.github.io/blog/2020/leetcode-491-%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%E6%9E%9A%E4%B8%BE%E5%AD%90%E9%9B%86/</link>
      <pubDate>Tue, 25 Aug 2020 01:22:00 +0800</pubDate>
      
      <guid>https://caixiongjiang.github.io/blog/2020/leetcode-491-%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%E6%9E%9A%E4%B8%BE%E5%AD%90%E9%9B%86/</guid>
      <description>题目链接：递增子序列
给定一个整型数组, 你的任务是找到所有该数组的递增子序列，递增子序列的长度至少是2。
示例:
输入: [4, 6, 7, 7]输出: [[4, 6], [4, 7], [4, 6, 7], [4, 6, 7, 7], [6, 7], [6, 7, 7], [7,7], [4,7,7]]说明:
 给定数组的长度不会超过15。 数组中的整数范围是 [-100,100]。 给定数组中可能包含重复数字，相等的数字应该被视为递增的一种情况。  思路 先看一眼数据范围，是15，猜一下复杂度，大概 $2^{15}$ 能过，应该就是二进制枚举子集了。
关于枚举子集，可以看我之前写的博客 ：二进制枚举子集详解
枚举子集可以求出，所有的组合方式。接下来我们只需要判断
 这个序列是不是一个递增序列 去重  关于判断是否是一个递增序列，我们只需要找一个比较小的数 t ，其值一直跟随当前遍历的数的值，如果遍历到的数小于t，则这肯定是一个递减序列。
关于去重，可以用 unordered_map 做一个 string 的映射，比如现在有列表 [1,12,-3,4]，我们给每个数字加上分隔符，变成一个字符串 1|12|-3|4，将这个值进行映射，可以保证不重复。
代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  class Solution { public: vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; findSubsequences(vector&amp;lt;int&amp;gt; &amp;amp;nums) { vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; ans; unordered_map&amp;lt;string, int&amp;gt; mp; int n = nums.</description>
    </item>
    
  </channel>
</rss>
