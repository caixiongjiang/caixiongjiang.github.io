<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>树形dp on 🌀riba2534&#39;s Blog</title>
    <link>https://blog.riba2534.cn/tags/%E6%A0%91%E5%BD%A2dp/</link>
    <description>Recent content in 树形dp on 🌀riba2534&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 05 Aug 2020 01:07:53 +0800</lastBuildDate><atom:link href="https://blog.riba2534.cn/tags/%E6%A0%91%E5%BD%A2dp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode 337 打家劫舍 III（树形dp）</title>
      <link>https://blog.riba2534.cn/blog/2020/leetcode-337-%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D-iii%E6%A0%91%E5%BD%A2dp/</link>
      <pubDate>Wed, 05 Aug 2020 01:07:53 +0800</pubDate>
      
      <guid>https://blog.riba2534.cn/blog/2020/leetcode-337-%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D-iii%E6%A0%91%E5%BD%A2dp/</guid>
      <description>题目链接：打家劫舍 III
在上次打劫完一条街道之后和一圈房屋后，小偷又发现了一个新的可行窃的地区。这个地区只有一个入口，我们称之为“根”。 除了“根”之外，每栋房子有且只有一个“父“房子与之相连。一番侦察之后，聪明的小偷意识到“这个地方的所有房屋的排列类似于一棵二叉树”。 如果两个直接相连的房子在同一天晚上被打劫，房屋将自动报警。
计算在不触动警报的情况下，小偷一晚能够盗取的最高金额。
示例 1:
输入: [3,2,3,null,3,null,1]3/ \2 3\ \ 3 1输出: 7 解释: 小偷一晚能够盗取的最高金额 = 3 + 3 + 1 = 7.示例 2:
输入: [3,4,5,1,3,null,1]3/ \4 5/ \ \ 1 3 1输出: 9解释: 小偷一晚能够盗取的最高金额 = 4 + 5 = 9.思路 树形dp裸题。
题目给出一棵二叉树，每一个点有一个权值，你需要选择树上的一些点，选择的两个点不能相邻，问可以取到的最大权值是多少。这个题意大概是 POJ2342 的变形。
我们定义：
 dp[node][0] 代表以 node为根，不选 node 这个点可以取到的最大权值。 dp[node][1] 代表以 node为根，选择 node 这个点可以取到的最大权值。  遍历其子节点，记为 son，则可以得到状态转移方程：</description>
    </item>
    
  </channel>
</rss>
