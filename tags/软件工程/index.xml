<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>软件工程 on 🌀riba2534&#39;s Blog</title>
    <link>https://caixiongjiang.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/</link>
    <description>Recent content in 软件工程 on 🌀riba2534&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 20 Dec 2018 21:24:00 +0800</lastBuildDate><atom:link href="https://caixiongjiang.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>软件工程学习笔记</title>
      <link>https://caixiongjiang.github.io/blog/2018/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Thu, 20 Dec 2018 21:24:00 +0800</pubDate>
      
      <guid>https://caixiongjiang.github.io/blog/2018/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>软件工程 记载一下软件工程中重要的定义.
一、软件工程引论 软件工程的定义 软件工程是一门学科，目的是生产出没有错误的软件，按时并且在预算交付，满足用户的需求。更进一步，当用户的需求改变时，软件必须易于修改。
软件危机 软件危机指软件产品的质量低得通常不能接受，并且不能满足交付日期和预算限制。是指在计算机软件开发和维护过程中遇到的一系列的问题。
软件工程的目标以及多目标之间的矛盾 软件工程的目标：
 软件开发的成本较低 软件功能能满足用户的需求 软件性能较好 软件可靠性高 软件易于使用，维护和移植 能按时完成开发任务，及时交付使用  矛盾：
 如果只考虑降低开发成本，很可能同时也降低了软件的可靠性。 如果一味追求软件的性能，可能开发出的软件对硬件的依赖性较强，从而影响软件的可移植性。  二、软件生命周期及其阶段和模型 软件生命周期指的是，软件产品从功能确定、设计、开发成功、投入使用，并在使用中不断修改、完善，直至被新的软件替代，从而停止软件使用的全过程。
软件生命周期分为几个阶段：可行性研究、项目计划、需求分析、总体设计、详细设计、编码实现、系统运行维护。
软件生命周期模型：  进化树模型：与现实世界软件开发最接近的模型，与「迭代-递增模型」等价 瀑布模型：纪律强制性的方法，文档驱动。 快速原型开发模型 同步-稳定模型 开源模型 敏捷过程原型 螺旋模型：风险驱动 迭代-递增模型  各种模型的特点： 瀑布模型的特点:
 线性化结构 各阶段具有里程碑特征 基于文档的驱动 严格的阶段评审机制  原型模型的两种实现方案各有什么特点  **抛弃式原型：**这种原型在目的达到后被抛弃，原型不做为最终产品 **进化式原型：**这类原型的形成和发展是逐步完成的，他是高度动态迭代和高度动态循环，是对付变化最有效的方式 **增量式模型：**系统是一段一段地增量构造，增量式开发实在软件总体设计基础上进行的。  大型项目用螺旋模型的原因 螺旋模型的优越性在于它吸收了「进化」的概念，使得开发人员和用户对每一个演化层出现的风险均有所了解，并对此做出反应。使用该模型需要丰富的风险评估经验和专门的知识。所以适合大项目。
三、结构化需求分析 需求分析及其任务 **需求分析：**开发人员准确的理解用户的要求，进行细致的调查分析，将用户非形式的需求陈述转化为完整的需求定义，再由需求定义转换到相应的需求规格说明的过程。
基本任务：
 问题识别：双方确定问题的综合需求 分析与综合：导出软件逻辑模型 编写文档：包括编写「需求规格说明书」，「初步用户使用手册」，「确认测试计划」，「修改完善软件开发计划」  重要概念：
  需求工程的主要目的是：解决系统是「做什么」的问题。
  需求分析最后产生的结果是产生「需求规格说明书」
  需求分析的主要方法是「结构化分析方法」</description>
    </item>
    
  </channel>
</rss>
