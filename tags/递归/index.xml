<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>递归 on 🌀riba2534&#39;s Blog</title>
    <link>https://blog.riba2534.cn/tags/%E9%80%92%E5%BD%92/</link>
    <description>Recent content in 递归 on 🌀riba2534&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 22 Aug 2020 01:57:03 +0800</lastBuildDate><atom:link href="https://blog.riba2534.cn/tags/%E9%80%92%E5%BD%92/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode 679 24 点游戏(暴力，递归)</title>
      <link>https://blog.riba2534.cn/blog/2020/leetcode-679-24-%E7%82%B9%E6%B8%B8%E6%88%8F%E6%9A%B4%E5%8A%9B%E9%80%92%E5%BD%92/</link>
      <pubDate>Sat, 22 Aug 2020 01:57:03 +0800</pubDate>
      
      <guid>https://blog.riba2534.cn/blog/2020/leetcode-679-24-%E7%82%B9%E6%B8%B8%E6%88%8F%E6%9A%B4%E5%8A%9B%E9%80%92%E5%BD%92/</guid>
      <description>题目链接：24 点游戏
你有 4 张写有 1 到 9 数字的牌。你需要判断是否能通过 *，/，+，-，(，) 的运算得到 24。
示例 1:
输入: [4, 1, 8, 7]输出: True解释: (8-4) * (7-1) = 24示例 2:
输入: [1, 2, 1, 2]输出: False注意:
 除法运算符 / 表示实数除法，而不是整数除法。例如 4 / (1 - 2/3) = 12 。 每个运算符对两个数进行运算。特别是我们不能用 - 作为一元运算符。例如，[1, 1, 1, 1] 作为输入时，表达式 -1 - 1 - 1 - 1 是不允许的。 你不能将数字连接在一起。例如，输入为 [1, 2, 1, 2] 时，不能写成 12 + 12 。  思路 首先括号可以直接忽略掉，因为我们可以从数组中任意取数并组合。括号没啥用。</description>
    </item>
    
    <item>
      <title>LeetCode 236 二叉树的最近公共祖先(递归)</title>
      <link>https://blog.riba2534.cn/blog/2020/leetcode-236-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88%E9%80%92%E5%BD%92/</link>
      <pubDate>Sun, 10 May 2020 01:00:01 +0800</pubDate>
      
      <guid>https://blog.riba2534.cn/blog/2020/leetcode-236-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88%E9%80%92%E5%BD%92/</guid>
      <description>题目链接：二叉树的最近公共祖先
给定一个二叉树, 找到该树中两个指定节点的最近公共祖先。
百度百科中最近公共祖先的定义为：“对于有根树 T 的两个结点 p、q，最近公共祖先表示为一个结点 x，满足 x 是 p、q 的祖先且 x 的深度尽可能大（一个节点也可以是它自己的祖先）。”
例如，给定如下二叉树: root = [3,5,1,6,2,0,8,null,null,7,4]
示例 1:
输入: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 1输出: 3解释: 节点 5 和节点 1 的最近公共祖先是节点 3。示例 2:
输入: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 4输出: 5解释: 节点 5 和节点 4 的最近公共祖先是节点 5。因为根据定义最近公共祖先节点可以为节点本身。说明:
 所有节点的值都是唯一的。 p、q 为不同节点且均存在于给定的二叉树中。  思路 乍一看是LCA的板子题，对于LCA问题，我们一般用 离线tarjan或者在线倍增来处理，或者用树链剖分
这几种算法，可以在我的ACM模板中找到 最近公共祖先</description>
    </item>
    
  </channel>
</rss>
